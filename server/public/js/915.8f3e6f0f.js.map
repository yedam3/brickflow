{"version":3,"file":"js/915.8f3e6f0f.js","mappings":"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","sources":["webpack://client/./src/views/pages/work/Control.vue?9f19","webpack://client/./src/views/pages/work/Control.vue","webpack://client/./src/views/pages/work/Control.vue?f3be"],"sourcesContent":["import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"card border-0\",\n  style: {\n    \"height\": \"calc(100vh - 8rem)\"\n  }\n};\nconst _hoisted_2 = {\n  class: \"table table-bordered text-center mt-3\"\n};\nconst _hoisted_3 = {\n  class: \"table table-bordered text-center\"\n};\nconst _hoisted_4 = {\n  colspan: \"2\"\n};\nconst _hoisted_5 = {\n  class: \"row text-center mt-4\"\n};\nconst _hoisted_6 = {\n  class: \"container d-flex justify-content-center mt-5\"\n};\nconst _hoisted_7 = {\n  class: \"card p-3\",\n  style: {\n    \"width\": \"600px\"\n  }\n};\nconst _hoisted_8 = {\n  class: \"row row-cols-3 g-2 text-center\"\n};\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = {\n  class: \"d-flex justify-content-center mt-4 gap-3\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Button = _resolveComponent(\"Button\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[11] || (_cache[11] = _createElementVNode(\"h3\", null, \"공정 진행 관리\", -1)), _cache[12] || (_cache[12] = _createElementVNode(\"div\", {\n    class: \"heading-with-line mb-2\"\n  }, [_createElementVNode(\"h5\", {\n    class: \"m-0 me-3\"\n  }, \"제어\")], -1)), _createElementVNode(\"table\", _hoisted_2, [_cache[6] || (_cache[6] = _createElementVNode(\"thead\", {\n    class: \"table-warning\"\n  }, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"공정명\"), _createElementVNode(\"th\", null, \"설비명\"), _createElementVNode(\"th\", null, \"제품명\"), _createElementVNode(\"th\", null, \"작업자명\"), _createElementVNode(\"th\", null, \"기작업량\"), _createElementVNode(\"th\", null, \"미작업량\")])], -1)), _createElementVNode(\"tbody\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"td\", null, _toDisplayString(this.processInfo.process_name), 1), _createElementVNode(\"td\", null, _toDisplayString(this.processInfo.model_name), 1), _createElementVNode(\"td\", null, _toDisplayString(this.processInfo.prod_name), 1), _createElementVNode(\"td\", null, _toDisplayString(this.processInfo.emp_name), 1), _createElementVNode(\"td\", null, _toDisplayString(this.processInfo.processed_quantity), 1), _createElementVNode(\"td\", null, _toDisplayString(this.processInfo.unprocessed_quantity), 1)])])]), _createElementVNode(\"table\", _hoisted_3, [_cache[7] || (_cache[7] = _createElementVNode(\"thead\", {\n    class: \"table-warning\"\n  }, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"투입량\"), _createElementVNode(\"th\", null, \"불량량\"), _createElementVNode(\"th\", null, \"생산량\"), _createElementVNode(\"th\", {\n    colspan: \"2\"\n  }, \"작업시작일시\"), _createElementVNode(\"th\", {\n    colspan: \"2\"\n  }, \"작업종료일시\")])], -1)), _createElementVNode(\"tbody\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"td\", null, _toDisplayString(this.processInfo.input_quantity), 1), _createElementVNode(\"td\", null, _toDisplayString(this.processInfo.error_quantity), 1), _createElementVNode(\"td\", null, _toDisplayString(this.processInfo.created_quantity), 1), _createElementVNode(\"td\", _hoisted_4, _toDisplayString(this.processInfo.work_start_date), 1), _createElementVNode(\"td\", null, _toDisplayString(this.processInfo.work_end_date), 1)])])]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", {\n    class: \"col-4\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.setFocus('input_quantity'))\n  }, [_cache[8] || (_cache[8] = _createElementVNode(\"div\", {\n    class: \"border p-2 bg-warning text-white\"\n  }, \"투입량\", -1)), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"border p-2\", {\n      'bg-white': $data.focusedField !== 'input_quantity',\n      'bg-primary text-white fw-bold border-3 border-primary': $data.focusedField === 'input_quantity'\n    }])\n  }, _toDisplayString($data.focusedField === 'input_quantity' ? $data.currentInput : $data.processInfo.input_quantity), 3)]), _createElementVNode(\"div\", {\n    class: \"col-4\",\n    onClick: _cache[1] || (_cache[1] = $event => $options.setFocus('error_quantity'))\n  }, [_cache[9] || (_cache[9] = _createElementVNode(\"div\", {\n    class: \"border p-2 bg-warning text-white\"\n  }, \"불량량\", -1)), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"border p-2\", {\n      'bg-white': $data.focusedField !== 'error_quantity',\n      'bg-danger text-white fw-bold border-3 border-danger': $data.focusedField === 'error_quantity'\n    }])\n  }, _toDisplayString($data.focusedField === 'error_quantity' ? $data.currentInput : $data.processInfo.error_quantity), 3)]), _createElementVNode(\"div\", {\n    class: \"col-4\",\n    onClick: _cache[2] || (_cache[2] = $event => $options.setFocus('created_quantity'))\n  }, [_cache[10] || (_cache[10] = _createElementVNode(\"div\", {\n    class: \"border p-2 bg-warning text-white\"\n  }, \"생산량\", -1)), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"border p-2\", {\n      'bg-white': $data.focusedField !== 'created_quantity',\n      'bg-success text-white fw-bold border-3 border-success': $data.focusedField === 'created_quantity'\n    }])\n  }, _toDisplayString($data.focusedField === 'created_quantity' ? $data.currentInput : $data.processInfo.created_quantity), 3)])]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList(['1', '2', '3', '4', '5', '6', '7', '8', '9'], key => {\n    return _createElementVNode(\"div\", {\n      class: \"col border py-3 keypad\",\n      key: key,\n      onClick: $event => $options.handleKey(key)\n    }, _toDisplayString(key), 9, _hoisted_9);\n  }), 64)), _createElementVNode(\"div\", {\n    class: \"col border py-3 keypad-backspace\",\n    onClick: _cache[3] || (_cache[3] = $event => $options.handleKey('<'))\n  }, \" < \"), _createElementVNode(\"div\", {\n    class: \"col border py-3 keypad-zero\",\n    onClick: _cache[4] || (_cache[4] = $event => $options.handleKey('0'))\n  }, \" 0 \"), _createElementVNode(\"div\", {\n    class: \"col border py-3 keypad-enter\",\n    onClick: _cache[5] || (_cache[5] = $event => $options.handleKey('✓'))\n  }, \" ✓ \")])])]), _createElementVNode(\"div\", _hoisted_10, [_createVNode(_component_Button, {\n    label: \"작업 시작\",\n    severity: \"primary\",\n    class: \"\",\n    size: \"large\",\n    style: {\n      \"width\": \"20rem\",\n      \"height\": \"5rem\"\n    },\n    onClick: $options.processStart\n  }, null, 8, [\"onClick\"]), _createVNode(_component_Button, {\n    label: \"작업 종료\",\n    severity: \"info\",\n    class: \"\",\n    size: \"large\",\n    style: {\n      \"width\": \"20rem\",\n      \"height\": \"5rem\"\n    },\n    onClick: $options.processEnd\n  }, null, 8, [\"onClick\"])])]);\n}","import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport Swal from 'sweetalert2';\nexport default {\n  components: {},\n  data() {\n    return {\n      // 공정 LOT\n      work_lot: null,\n      // 사번 코드\n      emp_code: null,\n      // 설비 코드\n      fac_code: null,\n      // 선택된 개체\n      focusedField: null,\n      // 현재 입력 값\n      currentInput: null,\n      // 키패드 강조\n      pressedKey: null,\n      // 공정 정보\n      processInfo: {\n        work_lot: \"\",\n        // 공정 LOT\n        process_code: \"\",\n        // 공정 코드\n        process_name: \"\",\n        // 공정명\n        fac_code: \"\",\n        // 설비 코드\n        model_name: \"\",\n        // 설비명\n        prod_code: \"\",\n        // 제품 코드\n        prod_name: \"\",\n        // 제품명\n        emp_code: \"\",\n        // 사번\n        emp_name: \"\",\n        // 사원명\n        processed_quantity: \"\",\n        // 기작업량\n        unprocessed_quantity: \"\",\n        // 미작업량\n        order_quantity: \"\",\n        // 지시량\n        input_quantity: \"\",\n        // 투입량\n        error_quantity: \"\",\n        // 불량량\n        created_quantity: \"\",\n        // 생산량\n        process_sequence: \"\",\n        // 공정 순서\n        work_start_date: \"\",\n        // 작업 시작 일시\n        work_end_date: \"\" // 작업 종료 일시\n      }\n    };\n  },\n  watch() {},\n  mounted() {\n    const processInfoData = this.$route.query;\n    if (typeof processInfoData.work_lot !== 'undefined') {\n      this.processInfo.work_lot = processInfoData.work_lot;\n      this.processInfo.emp_code = processInfoData.emp_code;\n      this.processInfo.fac_code = processInfoData.fac_code;\n      this.displayLoad();\n    }\n  },\n  methods: {\n    // 개체 선택\n    setFocus(field) {\n      if ((this.processInfo.work_start_date === null || this.processInfo.work_start_date === \"\") && field == \"error_quantity\") {\n        Swal.fire({\n          title: '오류',\n          text: '작업 시작 이전에는 불량 수량을 입력할 수 없습니다.',\n          icon: 'error',\n          confirmButtonText: '확인'\n        });\n        return;\n      }\n      ;\n      if ((this.processInfo.work_start_date === null || this.processInfo.work_start_date === \"\") && field == \"created_quantity\") {\n        Swal.fire({\n          title: '오류',\n          text: '작업 시작 이전에는 생산 수량을 입력할 수 없습니다.',\n          icon: 'error',\n          confirmButtonText: '확인'\n        });\n        return;\n      }\n      ;\n      if (this.processInfo.work_start_date !== null && this.processInfo.work_start_date !== \"\" && field == \"input_quantity\") {\n        Swal.fire({\n          title: '오류',\n          text: '작업 시작 이후에는 투입 수량을 입력할 수 없습니다.',\n          icon: 'error',\n          confirmButtonText: '확인'\n        });\n        return;\n      }\n      ;\n      if (this.focusedField == field) {\n        this.focusedField = null;\n      } else {\n        this.focusedField = field;\n        this.currentInput = this.processInfo[field] === 0 ? \"\" : this.processInfo[field].toString();\n      }\n    },\n    // 키 이벤트\n    handleKey(key) {\n      if (key === '<') {\n        this.backspace();\n      } else if (key === '✓') {\n        this.confirmInput();\n      } else {\n        this.appendNumber(key);\n      }\n      this.pressedKey = key;\n      setTimeout(() => {\n        this.pressedKey = null;\n      }, 300); // 500ms 후 초기화\n    },\n    // 숫자 추가\n    appendNumber(num) {\n      if (this.focusedField) {\n        this.currentInput += num;\n      }\n    },\n    // 입력 위치 수정\n    backspace() {\n      if (this.focusedField) {\n        this.currentInput = this.currentInput.slice(0, -1);\n      }\n    },\n    // 입력 반영\n    confirmInput() {\n      if (this.focusedField) {\n        const numValue = parseInt(this.currentInput) || 0;\n        this.processInfo[this.focusedField] = numValue;\n        this.focusedField = null;\n        this.currentInput = \"\";\n      }\n    },\n    // 키패드 클릭 효과\n    getKeyStyle(key) {\n      if (this.pressedKey === key.toString()) {\n        return {\n          cursor: 'pointer',\n          backgroundColor: '#0d6efd',\n          color: 'white',\n          fontWeight: 'bold',\n          border: '3px solid #0d6efd',\n          boxShadow: '0 0 10px rgba(13, 110, 253, 0.5)',\n          transition: 'all 0.1s ease-in-out'\n        };\n      }\n      return {\n        backgroundColor: key === '0' ? '#212529' : 'white',\n        color: key === '0' ? 'white' : 'black'\n      };\n    },\n    // 공정 정보 표시\n    async displayLoad() {\n      let work_lot = this.processInfo.work_lot;\n      console.log(this.processInfo);\n      await axios.get(`/api/work/process/select`, {\n        params: {\n          work_lot: this.processInfo.work_lot,\n          emp_code: this.processInfo.emp_code,\n          fac_code: this.processInfo.fac_code\n        }\n      }).then(res => {\n        console.log(res.data);\n        console.log(this.processInfo);\n        this.processInfo = res.data;\n        this.processInfo.work_lot = work_lot;\n      }).catch(err => console.error(err));\n\n      // 미작업량 = 투입량\n      // this.processInfo.input_quantity = this.processInfo.unprocessed_quantity;\n      // // 공정 정보 조회\n      // await axios.get(`/api/work/process/workLot/${this.work_lot}`).then(res => {\n      //     console.log(res.data);\n      // }).catch((err) => console.error(err));\n\n      // // 작업자 정보 조회\n      // await axios.get(`/api/work/work/process/emp_code/${this.emp_code}`).then(res => {\n      //     console.log(res.data);\n      // }).catch((err) => console.error(err));\n\n      // // 설비 정보 조회\n      // await axios.get(`/api/work/process/fac_code/${this.fac_code}`).then(res => {\n      //     console.log(res.data);\n      // }).catch((err) => console.error(err));\n    },\n    // 작업 시작\n    async processStart() {\n      // 투입량\n      if (this.processInfo.input_quantity === 0) {\n        Swal.fire({\n          title: '오류',\n          text: '투입량을 기입하세요.',\n          icon: 'error',\n          confirmButtonText: '확인'\n        });\n        return;\n      }\n      if (this.processInfo.input_quantity <= 0) {\n        Swal.fire({\n          title: '오류',\n          text: '투입량은 0이 될 수 없습니다.',\n          icon: 'error',\n          confirmButtonText: '확인'\n        });\n        return;\n      }\n      if (this.processInfo.input_quantity > this.processInfo.unprocessed_quantity) {\n        Swal.fire({\n          title: '오류',\n          text: '투입량은 미작업량을 초과할 수 없습니다.',\n          icon: 'error',\n          confirmButtonText: '확인'\n        });\n        return;\n      }\n      if (this.processInfo.work_start_date) {\n        Swal.fire({\n          title: '오류',\n          text: '해당 작업은 이미 시작된 상태입니다.',\n          icon: 'error',\n          confirmButtonText: '확인'\n        });\n        return;\n      }\n      await axios.post(`/api/work/process/start`, {\n        work_lot: this.processInfo.work_lot,\n        fac_code: this.processInfo.fac_code,\n        employee_code: this.processInfo.emp_code,\n        input_quantity: this.processInfo.input_quantity\n      }).then(res => {\n        const nowTime = new Date();\n        this.processInfo.work_start_date = this.formatDate(nowTime);\n        if (res.data[1][0].result_code === 0) {\n          Swal.fire({\n            title: '성공',\n            text: '작업이 문제 없이 시작되었습니다.',\n            icon: 'success',\n            confirmButtonText: '확인'\n          });\n          this.processInfo['created_quantity'] = this.processInfo['input_quantity'] - this.processInfo[['error_quantity']];\n        } else {\n          Swal.fire({\n            title: '오류',\n            text: '작업 시작에 실패했습니다.',\n            icon: 'error',\n            confirmButtonText: '확인'\n          });\n        }\n      }).catch(err => {\n        console.error(err);\n        Swal.fire({\n          title: '오류',\n          text: '작업 시작 과정에서 오류가 발생했습니다.',\n          icon: 'error',\n          confirmButtonText: '확인'\n        });\n      });\n    },\n    // 작업 종료\n    async processEnd() {\n      if (!this.processInfo.work_start_date) {\n        Swal.fire({\n          title: '오류',\n          text: '작업이 시작되지 않은 상태에서는 종료가 불가능합니다.',\n          icon: 'error',\n          confirmButtonText: '확인'\n        });\n        return;\n      }\n      if (this.processInfo.input_quantity < this.processInfo.error_quantity + this.processInfo.created_quantity) {\n        Swal.fire({\n          title: '오류',\n          text: '불량 수량과 생산 수량의 합계가 투입 수량보다 많습니다.',\n          icon: 'error',\n          confirmButtonText: '확인'\n        });\n        return;\n      }\n      if (this.processInfo.input_quantity > this.processInfo.error_quantity + this.processInfo.created_quantity) {\n        Swal.fire({\n          title: '오류',\n          text: '불량 수량과 생산 수량의 합이 투입 수량보다 적습니다.',\n          icon: 'error',\n          confirmButtonText: '확인'\n        });\n        return;\n      }\n      await axios.post(`/api/work/process/end`, {\n        work_lot: this.processInfo.work_lot,\n        fac_code: this.processInfo.fac_code,\n        employee_code: this.processInfo.emp_code,\n        error_quantity: this.processInfo.error_quantity,\n        created_quantity: this.processInfo.created_quantity\n      }).then(res => {\n        const nowTime = new Date();\n        this.processInfo.work_end_date = this.formatDate(nowTime);\n        if (res.data[1][0].result_code === 0) {\n          Swal.fire({\n            title: '성공',\n            text: '작업이 문제 없이 종료되었습니다.',\n            icon: 'success',\n            confirmButtonText: '확인'\n          });\n          this.$router.push({\n            name: 'Process'\n          });\n        } else {\n          Swal.fire({\n            title: '오류',\n            text: '작업 종료에 실패했습니다.',\n            icon: 'error',\n            confirmButtonText: '확인'\n          });\n        }\n      }).catch(err => {\n        console.error(err);\n        Swal.fire({\n          title: '오류',\n          text: '작업 종료 과정에서 오류가 발생했습니다.',\n          icon: 'error',\n          confirmButtonText: '확인'\n        });\n      });\n    },\n    // 날짜 반영\n    formatDate(dateTime) {\n      const yyyy = dateTime.getFullYear();\n      const MM = String(dateTime.getMonth() + 1).padStart(2, '0');\n      const dd = String(dateTime.getDate()).padStart(2, '0');\n      const hh = String(dateTime.getHours()).padStart(2, '0');\n      const mm = String(dateTime.getMinutes()).padStart(2, '0');\n      const ss = String(dateTime.getSeconds()).padStart(2, '0');\n      return `${yyyy}-${MM}-${dd} ${hh}:${mm}:${ss}`;\n    }\n\n    //\n  }\n};","/* unplugin-vue-components disabled */import { render } from \"./Control.vue?vue&type=template&id=28f277ca\"\nimport script from \"./Control.vue?vue&type=script&lang=js\"\nexport * from \"./Control.vue?vue&type=script&lang=js\"\n\nimport \"./Control.vue?vue&type=style&index=0&id=28f277ca&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_hoisted_1","class","style","_hoisted_2","_hoisted_3","_hoisted_4","colspan","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","render","_ctx","_cache","$props","$setup","$data","$options","_component_Button","this","processInfo","process_name","model_name","prod_name","emp_name","processed_quantity","unprocessed_quantity","input_quantity","error_quantity","created_quantity","work_start_date","work_end_date","onClick","$event","setFocus","focusedField","currentInput","key","handleKey","label","severity","size","processStart","processEnd","components","data","work_lot","emp_code","fac_code","pressedKey","process_code","prod_code","order_quantity","process_sequence","watch","mounted","processInfoData","$route","query","displayLoad","methods","field","toString","title","text","icon","confirmButtonText","backspace","confirmInput","appendNumber","setTimeout","num","slice","numValue","parseInt","getKeyStyle","cursor","backgroundColor","color","fontWeight","border","boxShadow","transition","console","log","axios","get","params","then","res","catch","err","error","post","employee_code","nowTime","Date","formatDate","result_code","$router","push","name","dateTime","yyyy","getFullYear","MM","String","getMonth","padStart","dd","getDate","hh","getHours","mm","getMinutes","ss","getSeconds","__exports__"],"sourceRoot":""}